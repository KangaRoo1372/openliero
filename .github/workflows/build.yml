---

name: Build

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

env:
  SCCACHE_GHA_ENABLED: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        include:
          - name: linux
            os: ubuntu-latest
          - name: windows
            os: windows-latest
          - name: macos
            os: macos-latest
            extra-flags: -D CMAKE_OSX_ARCHITECTURES="x86_64;arm64" -D CMAKE_OSX_DEPLOYMENT_TARGET="10.13"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache the build
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        uses: libsdl-org/setup-sdl@main
        id: sdl
        with:
          build-type: Release
          install-linux-dependencies: true
          version: 2-latest
          version-sdl-image: 2-latest

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y libsdl2-dev libsdl2-image-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake

      - name: Build vendored dependencies (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: >
          cmake \
            -S libs/SDL \
            -B tmp/SDL \
            -D BUILD_SHARED_LIBS=OFF \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_POSITION_INDEPENDENT_CODE=ON \
            -D CMAKE_C_COMPILER_LAUNCHER=sccache \
            -D CMAKE_CXX_COMPILER_LAUNCHER=sccache \
            -D SDL_TEST=OFF ${{ matrix.extra-flags }}
          cmake \
            --build tmp/SDL \
            --parallel 4
          DESTDIR=$(pwd)/tmp cmake \
            --install tmp/SDL
          cmake \
            -S libs/SDL_image \
            -B tmp/SDL_image \
            -D CMAKE_BUILD_TYPE=Release \
            -D SDL2IMAGE_VENDORED=ON \
            -D BUILD_SHARED_LIBS=OFF \
            -D CMAKE_POSITION_INDEPENDENT_CODE=ON \
            -D CMAKE_C_COMPILER_LAUNCHER=sccache \
            -D CMAKE_CXX_COMPILER_LAUNCHER=sccache \
            -D CMAKE_PREFIX_PATH=$(pwd)/tmp/usr/local ${{ matrix.extra-flags }}
          cmake \
            --build tmp/SDL_image \
            --parallel 4
          DESTDIR=$(pwd)/tmp cmake \
            --install tmp/SDL_image

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: >
          cmake
          -D CMAKE_BUILD_TYPE=Release
          -D OPENLIERO_BUILD_TCTOOL=ON
            -D CMAKE_C_COMPILER_LAUNCHER=sccache
            -D CMAKE_CXX_COMPILER_LAUNCHER=sccache

      - name: Configure CMake (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: >
          cmake
          -D CMAKE_BUILD_TYPE=Release
          -D OPENLIERO_BUILD_TCTOOL=ON
          -D OPENLIERO_VENDORED_DEPS=ON
          -D CMAKE_PREFIX_PATH=$(pwd)/tmp/usr/local
          -D CMAKE_C_COMPILER_LAUNCHER=sccache
          -D CMAKE_CXX_COMPILER_LAUNCHER=sccache
          ${{ matrix.extra-flags }}

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: >
          cmake
          --build .
          --config Release
          --parallel 4

      - name: Build (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: >
          cmake
          --build .
          --config Release
          --parallel 4

      - name: Move executable (Windows)
        if: runner.os == 'Windows'
        run: >
          Move-Item
          -Path Release/openliero.exe,Release/tctool.exe
          -Destination .

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-build
          path: |
            openliero*
            tctool*
            Resources
            Setups
            Profiles
            TC

  release:
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: linux-build

      - uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: windows-build

      - uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: macos-build

      - name: Create archive (Linux)
        run: |
          chmod +x linux-build/openliero linux-build/tctool
          cd linux-build
          tar cfJ liero-linux-x64-${{ github.sha }}.tar.xz *
          cd ..

      - name: Create archive (macOS)
        run: |
          chmod +x macos-build/openliero macos-build/tctool
          cd macos-build
          tar cfJ liero-macos-universal-${{ github.sha }}.tar.xz *
          cd ..

      - name: Create archive (Windows)
        run: |
          curl -L \
          -o windows-build/sdl2-win-x64.zip \
          https://github.com/libsdl-org/SDL/releases/download/release-2.30.6/SDL2-2.30.6-win32-x64.zip
          curl -L \
          -o windows-build/sdl2_image-win-x64.zip \
          https://github.com/libsdl-org/SDL_image/releases/download/release-2.8.2/SDL2_image-2.8.2-win32-x64.zip
          cd windows-build
          unzip sdl2-win-x64.zip
          rm -rf sdl2-win-x64.zip
          unzip sdl2_image-win-x64.zip
          rm -rf sdl2_image-win-x64.zip optional
          mv README.txt README-SDL_image.txt
          zip -r liero-windows-x64-${{ github.sha }}.zip .
          cd ..

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}-${{ github.sha }}
          files: |
            linux-build/liero-linux-x64-${{ github.sha }}.tar.xz
            windows-build/liero-windows-x64-${{ github.sha }}.zip
            macos-build/liero-macos-universal-${{ github.sha }}.tar.xz
